{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","_ref","image","title","text","style","background","concat","SearchBar","state","value","timeout","doSearch","event","callback","_this","props","setState","target","clearTimeout","setTimeout","this","lib_default","name","size","type","placeholder","onChange","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","_this$state","_this$state2","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","objectSpread","_this$state3","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Actor","actor","profile_path","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","localStorage","location","elements_Navigation_Navigation","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","NotFound","App","basename","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e549ed3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <div className=\"rmdb-header\">\n    <div className=\"rmdb-header-content\">\n      <Link to=\"/\">\n        <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\n      </Link>\n      <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\n    </div>\n  </div>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '053896d8add0d6b7e535a6220206fe71';\n\n\n\n// 019e8f375549e0bbd4a4191862ebc88f\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500'\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div className=\"rmdb-heroimage\"\n    style={{\n      background:\n        `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${image}'), #1c1c1c`\n    }}\n  >\n    <div className=\"rmdb-heroimage-content\">\n      <div className=\"rmdb-heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n)\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default HeroImage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  }\n  // Must have this here so we can reset it\n  timeout = null;\n\n  doSearch = (event) => {\n    // ES6 Destructuring prop\n    const { callback } = this.props;\n\n    this.setState({ value: event.target.value })\n    clearTimeout(this.timeout);\n    // Set a timeout to wait for the user to stop writing\n    // So we don´t have to make unnessesary calls\n    this.timeout = setTimeout( () => {\n      callback(this.state.value);\n    }, 500);\n  }\n\n  render () {\n    // ES6 Destructuring state\n    const { value } = this.state;\n\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search\"\n            onChange={this.doSearch}\n            value={value}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n}\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ header, loading, children }) => {\n\n  const renderElements = () => {\n    const gridElements = children.map( (element, i) => (\n      <div key={i} className=\"rmdb-grid-element\">\n        {element}\n      </div>\n    ))\n    return gridElements;\n  }\n\n  return (\n    <div className=\"rmdb-grid\">\n      {header && !loading ? <h1>{header}</h1> : null}\n      <div className=\"rmdb-grid-content\">\n         {renderElements()}\n      </div>\n    </div>\n  )\n}\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n}\n\nexport default FourColGrid;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\n  <div className=\"rmdb-moviethumb\">\n    {/* You can send props via the Links \"to\" object. Here we create our own \"movieName\" */}\n    {clickable ?\n      <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n      :\n      <img src={image} alt=\"moviethumb\" />\n    }\n  </div>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string,\n  clickable: PropTypes.bool\n}\n\nexport default MovieThumb;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\n    <p>{text}</p>\n  </div>\n)\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n  <div className=\"loader\"></div>\n)\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = (searchTerm) => {\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    })\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  loadMoreItems = () => {\n    // ES6 Destructuring the state\n    const { searchTerm, currentPage } = this.state;\n\n    let endpoint = '';\n    this.setState({ loading: true })\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 Destructuring the state\n    const { movies, heroImage, searchTerm } = this.state;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n      this.setState({\n        movies: [...movies, ...result.results],\n        heroImage: heroImage || result.results[0],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }, () => {\n        // Remember state for the next mount if we´re not in a search view\n        if (searchTerm === \"\") {\n          sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n        }\n      })\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the state\n    const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n    return (\n      <div className=\"rmdb-home\">\n        {heroImage ?\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems}/>\n          </div> : null }\n          <div className=\"rmdb-home-grid\">\n            <FourColGrid\n              header={searchTerm ? 'Search Result' : 'Popular Movies'}\n              loading={loading}\n            >\n              {movies.map( (element, i) => (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              ))}\n            </FourColGrid>\n            {loading ? <Spinner /> : null}\n            {(currentPage <= totalPages && !loading) ?\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n              : null\n            }\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Navigation.css';\n\nconst Navigation = ({ movie }) => (\n  <div className=\"rmdb-navigation\">\n    <div className=\"rmdb-navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>/</p>\n      <p>{movie}</p>\n    </div>\n  </div>\n)\n\nNavigation.propTypes = {\n  movie: PropTypes.string\n}\n\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors }) => (\n  <div className=\"rmdb-movieinfo\"\n    style={{\n      background: movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')` : '#000'\n    }}\n  >\n    <div className=\"rmdb-movieinfo-content\">\n      <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n          image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : './images/no_image.jpg'}\n          clickable={false}\n        />\n      </div>\n      <div className=\"rmdb-movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.vote_average * 10}></meter>\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n        </div>\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n        {directors.map( (element, i) => {\n          return <p key={i} className=\"rmdb-director\">{element.name}</p>\n        })}\n      </div>\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n    </div>\n  </div>\n)\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers.js';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <div className=\"rmdb-movieinfobar\">\n    <div className=\"rmdb-movieinfobar-content\">\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(time)}</span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(budget)}</span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n        <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(revenue)}</span>\n      </div>\n    </div>\n  </div>\n)\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport { IMAGE_BASE_URL } from '../../../config';\nimport PropTypes from 'prop-types';\nimport './Actor.css';\n\nconst Actor = ({ actor }) => {\n\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : './images/no_image.jpg'}\n        alt=\"actorthumb\"\n      />\n      <span className=\"rmdb-actor-name\">{actor.name}</span>\n      <span className=\"rmdb-actor-character\">{actor.character}</span>\n    </div>\n  )\n}\n\nActor.propTypes = {\n  actor: PropTypes.object\n}\n\nexport default Actor;","import React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.js';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  }\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      let state = JSON.parse(localStorage.getItem(`${movieId}`))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      // First fetch the movie ...\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n\n      if (result.status_code) {\n        // If we don't find any movie\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result }, () => {\n          // ... then fetch actors in the setState callback function\n          let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n          fetch(endpoint)\n          .then(result => result.json())\n          .then(result => {\n\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\n\n            this.setState({\n              actors: result.cast,\n              directors,\n              loading: false\n            }, () => {\n              localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n            })\n          })\n        })\n      }\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the props and state\n    const { movieName } = this.props.location;\n    const { movie, directors, actors, loading } = this.state;\n\n    return (\n      <div className=\"rmdb-movie\">\n        {movie ?\n        <div>\n          <Navigation movie={movieName} />\n          <MovieInfo movie={movie} directors={directors} />\n          <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n        </div>\n        : null }\n        {actors ?\n        <div className=\"rmdb-movie-grid\">\n          <FourColGrid header={'Actors'}>\n            {actors.map( (element, i) => (\n              <Actor key={i} actor={element} />\n            ))}\n          </FourColGrid>\n        </div>\n        : null }\n        {!actors && !loading ? <h1>No movie found</h1> : null }\n        {loading ? <Spinner /> : null}\n      </div>\n    )\n  }\n}\n\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>Whooops. This page doesn't exist</h1>\n  </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\n\nconst App = () => (\n  <BrowserRouter basename = '/moviedb-app/'>\n    <React.Fragment>\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/:movieId\" component={Movie} exact />\n        <Route component={NotFound} />\n      </Switch>\n    </React.Fragment>\n  </BrowserRouter>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}